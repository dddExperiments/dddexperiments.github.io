"use strict";function Vector3(a,b,c){this.x=a,this.y=b,this.z=c}function Plane(a,b){this.normal=a,this.depth=b}function Color(){this.r=Math.random(),this.g=Math.random(),this.b=Math.random()}function ColorGenerator(){this.dictionnary={},this.getColor=function(a){return void 0===this.dictionnary[a]&&(this.dictionnary[a]=new Color),this.dictionnary[a]}}function WorkerCamera(a){this.position=new Float32Array([a.position.x,a.position.y,a.position.z]),this.cameraFront=new Float32Array([a.cameraFront.x,a.cameraFront.y,a.cameraFront.z]),this.cameraUp=new Float32Array([a.cameraUp.x,a.cameraUp.y,a.cameraUp.z]),this.cameraRight=new Float32Array([a.cameraRight.x,a.cameraRight.y,a.cameraRight.z]),this.my=a.my,this.mx=a.mx}function WorkerGeometry(a,b,c,d,e){this.indices=a,this.vertices=b,this.colors=c||[],this.width=d,this.height=e}function intersectPoint(a,b,c,d,e){var f=c*a.mx,g=d*a.my;e[0]=a.cameraFront[0]+a.cameraRight[0]*f+a.cameraUp[0]*g,e[1]=a.cameraFront[1]+a.cameraRight[1]*f+a.cameraUp[1]*g,e[2]=a.cameraFront[2]+a.cameraRight[2]*f+a.cameraUp[2]*g;var h=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]=e[0]/h,e[1]=e[1]/h,e[2]=e[2]/h;var i=a.position,j=b.normal,k=-(i[0]*j.x+i[1]*j.y+i[2]*j.z+b.depth)/(e[0]*j.x+e[1]*j.y+e[2]*j.z);return e[0]=i[0]+e[0]*k,e[1]=i[1]+e[1]*k,e[2]=i[2]+e[2]*k,e}function projectVerticesInPlace(a,b,c){for(var d=b.vertices.length/3,e=b.vertices,f=b.imgWidth-1,g=b.imgHeight-1,h=new Float32Array(3),i=0;i<d;++i){var j=3*i,k=j+1,l=j+2,m=e[j],n=e[k],o=-1+2*m/f,p=1-2*n/g,q=e[l],r=a[q];h=intersectPoint(c,r,o,p,h),e[j]=h[0],e[k]=h[1],e[l]=h[2]}}function ArrayReader(a){function b(){return d.getUint8(e++)}function c(){var a=d.getFloat32(e,!1);return e+=4,a}var d=new DataView(a),e=0;this.ReadCompressedInt=function(){var a,c=0;do a=b(),c=c<<7|127&a;while(a<128);return c},this.ReadBigEndianSingle=function(){return c()},this.ReadBigEndianUInt16=function(){var a=b(),c=b();return c|a<<8}}function parsePS1BinFile(a){var b=new ArrayReader(a),c=b.ReadBigEndianUInt16(),d=b.ReadBigEndianUInt16();if(1!==c||0!==d)return!1;for(var e=b.ReadCompressedInt(),f=[],g=0;g<e;++g)for(var h=b.ReadCompressedInt(),i=0;i<h;i++){var j=b.ReadCompressedInt(),k=b.ReadCompressedInt();f.push([g,j,k])}for(var l=b.ReadCompressedInt(),m=new Float32Array(3*l),n=new Float32Array(3*l),o=new Array(l),g=0;g<l;g++){m[3*g+0]=b.ReadBigEndianSingle(),m[3*g+1]=b.ReadBigEndianSingle(),m[3*g+2]=b.ReadBigEndianSingle();var p=b.ReadBigEndianUInt16(),q=255*(p>>11)/31&255,r=255*(p>>5&63)/63&255,s=255*(31&p)/31&255;n[3*g+0]=q/255,n[3*g+1]=r/255,n[3*g+2]=s/255,o[g]=[]}for(var g=0;g<f.length;++g)for(var t=f[g],i=t[1];i<t[1]+t[2];++i)o[i].push(t[0]);for(var u=0,g=0;g<o.length;++g)o[g].length>2&&u++;return new PointCloudParsingResult(u,l,m,n,o)}function PointCloudParsingResult(a,b,c,d,e){this.nbTracks=a,this.nbVertices=b,this.positions=c,this.colors=d,this.viewList=e}function parsePolygonFile(a,b,c){var d=a.getUint16(b,!0);b+=2;var e=a.getUint16(b,!0);b+=2;var f=a.getUint16(b,!0);b+=2;var g=a.getUint32(b,!0);b+=4;var h=a.getUint32(b,!0);b+=4;a.getFloat32(b,!0);b+=4;a.getFloat32(b,!0);b+=4;a.getFloat32(b,!0);b+=4;a.getFloat32(b,!0);b+=4;for(var i=0,j=0,k=0,l=new Float32Array(3*g),m=new Uint16Array(h),n=c?new Float32Array(3*g):[],o=new ColorGenerator,p=0,q=0;q<f;++q){var r=a.getUint16(b,!0);b+=2;var s=o.getColor(r),t=a.getUint16(b,!0);b+=2;var u=a.getUint16(b,!0);b+=2;var v=a.getUint16(b,!0);b+=2;var w=a.getUint16(b,!0);b+=2,l[i++]=v,l[i++]=w,l[i++]=r,c&&(n[j++]=s.r,n[j++]=s.g,n[j++]=s.b);for(var x=v,y=w,z=1;z<t;++z)x+=a.getInt16(b,!0),b+=2,y+=a.getInt16(b,!0),b+=2,l[i++]=x,l[i++]=y,l[i++]=r,c&&(n[j++]=s.r,n[j++]=s.g,n[j++]=s.b);var A=a.getUint16(b,!0);b+=2,A+=p,m[k++]=A;for(var B=A,C=3*u-1,z=0;z<C;++z)B+=a.getInt16(b,!0),b+=2,m[k++]=B;p+=t}return new PolygonParsingResult(l,m,n,d,e)}function PolygonParsingResult(a,b,c,d,e){this.vertices=a,this.indices=b,this.colors=c,this.imgWidth=d,this.imgHeight=e}self.onmessage=function(a){if("createGeometry"===a.data.type){for(var b=a.data.cameras,c=b.length,d=a.data.debugBlendingEnabled,e=new Array(c),f=new Array(c),g=new Array(c),h=0;h<c;++h)e[h]=new WorkerCamera(b[h]);var i=new Date,j=new DataView(a.data.buffer),k=0,l=j.getUint16(k,!0);if(k+=2,l!==c)return void self.postMessage({type:"log",msg:"Error: nbGeometries != nbCameras",fileIndex:a.data.fileIndex});for(var m=new Array(c),n=new Array(c),o=0,p=0,h=0;h<c;++h){var q=j.getUint32(k,!0);k+=4;var r=j.getUint32(k,!0);k+=4,n[h]=q,m[h]=r,o+=q,p+=r}for(var h=0;h<c;++h)f[h]=parsePolygonFile(j,k,d),k+=n[h];for(var h=0;h<c;++h){for(var s=m[h]/16,t=new Array(s),u=0;u<s;++u){var v=j.getFloat32(k,!0);k+=4;var w=j.getFloat32(k,!0);k+=4;var x=j.getFloat32(k,!0);k+=4;var y=j.getFloat32(k,!0);k+=4,t[u]=new Plane(new Vector3(v,w,x),y)}g[h]=t}for(var z=new Date-i,A=new Date,B=new Array(c),h=0;h<c;++h){var C=f[h];projectVerticesInPlace(g[h],C,e[h]),B[h]=new WorkerGeometry(C.indices,C.vertices,C.colors,C.imgWidth,C.imgHeight)}var D=new Date-A;self.postMessage({type:"geometry",result:B,parsingTime:z,projectingTime:D,startCameraIndex:a.data.startCameraIndex,endCameraIndex:a.data.endCameraIndex,fileIndex:a.data.fileIndex,rootUrl:a.data.rootUrl})}else if("createPointCloud"===a.data.type){var E=parsePS1BinFile(a.data.buffer);self.postMessage({type:"pointCloud",index:a.data.index,result:E,rootUrl:a.data.rootUrl})}};